name: django-cte tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Read Python versions from pyproject.toml
      id: read-versions
      # produces output like: python_versions=[ "3.9", "3.10", "3.11", "3.12" ]
      run: >-
        echo "python_versions=$(
        grep -oP '(?<=Language :: Python :: )\d\.\d+' pyproject.toml
        | jq --raw-input .
        | jq --slurp .
        | tr '\n' ' '
        )" >> $GITHUB_OUTPUT
    outputs:
      python_versions: ${{ steps.read-versions.outputs.python_versions }}

  tests:
    needs: [configure]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJSON(needs.configure.outputs.python_versions) }}
        django:
        - 'Django>=4.2,<4.3'
        - 'Django>=5.0,<5.1'
        - 'Django>=5.1,<5.2'
        exclude:
        - {python: '3.9', django: 'Django>=5.0,<5.1'}
        - {python: '3.9', django: 'Django>=5.1,<5.2'}
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - uses: astral-sh/setup-uv@v6
      with:
        version: '>=0.7'
        python-version: ${{ matrix.python }}
    - name: Setup
      run: |
        uv sync --locked --no-install-package=django
        uv pip install "${{ matrix.django }}"
    - name: Run tests
      env:
        DB_SETTINGS: >-
          {
            "ENGINE":"django.db.backends.postgresql_psycopg2",
            "NAME":"django_cte",
            "USER":"postgres",
            "PASSWORD":"postgres",
            "HOST":"localhost",
            "PORT":"5432"
          }
      run: .venv/bin/pytest -v
    - name: Check style
      run: .venv/bin/ruff check
